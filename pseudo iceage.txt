:L1:comp joystick, -still- --z set high if no joystick signal
move joystick, var_dir
branch on flag (z, L1)	--keep waiting for joystick values
move val 16 to var_step_count		

comp var_dir, -up-
branch on flag (z, L2)
comp var_dir, -right-
branch on flag(z, L3)
comp var_dir, -down- 
brach on flag (z, L4)
branch unconditionally(L5)

:L6: move -wait time- to var_count	--value less than 255 still enough for reasonable speed. 255 clock cycles per pixel would yield speed little over 2 tiles/s
:L7: sub var_count, 1
comp var_count, 0
branch on flag (z, L8)
Branch unconditionally to L7
:L8:comp var_dir, -up-
branch on flag (z, L2.2)
comp var_dir, -right-
branch on flag(z, L3.2)
comp var_dir, -down- 
brach on flag (z, L4.2)
branch unconditionally(L5.2)

--------------------------------------------------------

:L2:			--up

tileAccess (PCRaddr) to var_tile
comp var_tile, 3 		--goal
branch on flag (z, -Line_goal_reached- ) 
comp var_tile, 2 		--reached ground
branch on flag (z, L1)

comp PCR, 16
branch on flag (n, L1)		--hit ceiling 

sub PCR, 16 store int var_temp 
tile access(temp) to var_tile
comp var_tile, 1		--hit rock
branch on flag (z, L1)


PCR = PCR - 16
PCD = x"E0"
branch unconditionally L6
:L2.2:
pcd -= 16
branch on flag (z, L2)
branch unconditionally L6

-------------------------------------------------------------

:L3:			--right

tileAccess (PCRaddr) to var_tile
comp var_tile, 3 		--goal
branch on flag (z, L9) 
comp var_tile, 2 		--reached ground
branch on flag (z, L1)

shift pcr left by 4, move to var_temp 
comp var_temp, x"F0"
branch on flag (z, L1)		--hit right wall

add PCR, 1 store int var_temp 
tile access(var_temp) to var_tile
comp var_tile, 1		--hit rock
branch on flag (z, L1)


PCD = 1
branch unconditionally L6
:L3.2:
comp pcd, 16 
branch on flag z, L2
comp pcd, 15
branch on flag z, L3.3
pcd += 1
branch unconditionally L6
:L3.3:
move 0 to pcd
PCR += 1
branch unconditionally L6
--------------------------------------------------------------

:L4:			--down

tileAccess (PCRaddr) to var_tile
comp var_tile, 3 		--goal
branch on flag (z, -Line_goal_reached- ) 
comp var_tile, 2 		--reached ground
branch on flag (z, L1)

move x"ef" to var_temp
comp var_temp, PCR
branch on flag (n, L1)		--hit floor

add PCR, 16 store int var_temp 
tile access(temp) to var_tile
comp var_tile, 1		--hit rock
branch on flag (z, L1)


pcd = 16

:L4.2:
PCD = x"10"
branch unconditionally L6
:L2.2:
pcd += 16
branch on flag (n, L4.3)
branch unconditionally L6
:L4.3:
PCR += 16
------------------------------------------------------

:L5:			--left

tileAccess (PCRaddr) to var_tile
comp var_tile, 3 		--goal
branch on flag (z, L9)
comp var_tile, 2 		--reached ground
branch on flag (z, L1)

Shift PCR left by 4, store in var_temp
comp var_temp, 0
branch on flag (z, L1) 		--hit left wall

sub PCR, 1 store int var_temp 
tile access(temp) to var_tile
comp var_tile, 1		--hit rock
branch on flag (z, L1)


PCR = PCR -1
PCD = PCD + 15

:L5.2:
cycle 
pcd -= 1
------------------------------------------------------

:L9: 			--Goal reached

move -player start position- to PCR
branch unconditionally to L1		--restart game