0000 Nop
0001 move
0010 deprecated -- unused, add AND func. or such?
0011 Add
0100 Sub
0101 Mult
0110 Shift
0111 Col - collision
1000 Comp
1001 Set flag - z:n
1010 Branch on Flag - z:n
1011 branch
1111 Halt

31           28 27          26 25           18 17         16  15            8 7              0
[4 bitar opkod] [2 bitar am1 ] [8 bitar term1] [2 bitar am2]  [8 bitar term2] [8 bitar utaddr]

Term 1 tolkas alltid ut som register(term 1).

Tolkning am2 om angivet va (vanlig addresserning):
am2 = 00 -> direkt angivet värde
am2= 01 -> register(term)

0000 Nop
utför ingen operation

--0001 move	
lagra term2 till register(utaddr)

0011 Add
addera reg(term1) med term2 (va), lagra i reg(utaddr)

0100 Sub
subtrahera reg(term1) med term2 (va), lagra i reg(utaddr)
sätt z hög om res = 0,  sätt N hög om res < 0, annars negativa

0101 Mult
multiplicera reg(term1) med term2 (va), lagra i reg(utaddr)

0110 Shift
shifta reg(term1) höger om am2(1) = '1', annars vänster, med 1 steg. Lagrar i reg(utaddr) 

0111 Col - collision
Tar indata term1 = (4 bitar X coord.  | 4 bitar Y coord)
	   term2 = (2 bitar dir, 00 = up, 01 = ner, 10 = vänster, 11 = höger)
sätt z-flaggan hög om nästa är sten, annars låg.
sätt n-flaggan hög om nuvarande är mark, annars låg.

1000 Comp
som Sub, men lagra inget värde i register

1001 Set flag - z:n
am2 = 00 -> z <= 0
am2 = 01 -> z <= 1
am2 = 10 -> n <= 0 
am2 = 11 -> n <= 1

1010 Branch on Flag - z/n
om ((am2(0) = 0 && z = 1) || (am2(0) = 1 && n = 1))
	branch (dvs pc = pc + term1 (direkt addressering))

1011 branch
pc = pc + term1 (direkt addressering)
	
1111 Halt 
stop execution -- currently not implemented.
